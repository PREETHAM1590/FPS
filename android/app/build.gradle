apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android" // If using Kotlin
apply plugin: "com.facebook.react"

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    /* Folders */
    //   The root of your project, i.e. where `package.json` lives. Default is `../`
    //   projectRootDir = file("../")
    //   The folder where Android Manifestspecify your app name. Default is `app/src/main/AndroidManifest.xml`
    //   manifestFile = file("src/main/AndroidManifest.xml")
    //   The folder where your sourcesare. Default is `app/src/main/java`
    //   javaS
    //   The folder where your Kotlin sources are. Default is `app/src/main/kotlin`
    //   kotlinSourcesDir = file("src/main/kotlin")
    //   The folder where your CXX sources are. Default is `app/src/main/jni`
    //   cxxSourcesDir = file("src/main/jni")
    /* Variants */
    //   The list of variants to that are debuggable. For example `["release", "debug"]`
    //   debuggableVariants = []
}

android {
    ndkVersion rootProject.ext.ndkVersion
    compileSdkVersion rootProject.ext.compileSdkVersion

    namespace "com.example.performancemonitorpoc" // Ensure this matches your package name
    defaultConfig {
        applicationId "com.example.performancemonitorpoc"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // Caution! In production, you need to generate your own keystore file.
            // see https://reactnative.dev/docs/signed-apk-android.
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    // If you are using Kotlin, uncomment this block
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-native")

    // Expo dependencies
    implementation(project(path: ":expo"))
    implementation(project(path: ":expo-modules-core"))
    implementation(project(path: ":expo-dev-client"))
    // Add other Expo package dependencies if needed

    // Other dependencies
    implementation("androidx.core:core-ktx:1.9.0") // Example, adjust as needed
    implementation("androidx.appcompat:appcompat:1.6.1") // Example, adjust as needed


    if (hermesEnabled.get()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation("org.webkit:android-jsc:+")
    }
}

// If you are using Kotlin, uncomment this block
/*
kotlin {
    // Apply the Kotlin Gradle plugin to your project
    // You can learn more about applying plugins here: https://docs.gradle.org/current/userguide/plugins.html#sec:plugins_block
    //noinspection DifferentKotlinGradleVersion
    kotlinVersion = rootProject.ext.kotlinVersion // Or specify your Kotlin version directly
}
*/

def enableProguardInReleaseBuilds = false
def hermesEnabled = project.ext.has("reactNativeHost").get() ? project.ext.get("reactNativeHost").hermesEnabled : true
